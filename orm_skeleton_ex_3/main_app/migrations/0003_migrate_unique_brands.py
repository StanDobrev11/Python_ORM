# Generated by Django 4.2.4 on 2023-12-20 14:28

from django.db import migrations


def create_unique_brands(apps, schema_editor):
    shoe = apps.get_model("main_app", "Shoe")
    unique_brands = apps.get_model("main_app", "UniqueBrands")

    # this creates flatten QuerySet (type of list) with unique names ['Nike', 'Adidas', 'Puma']
    unique_brand_names = shoe.objects.values_list('brand', flat=True).distinct()

    # option 1 -> used ONLY for couple of insertions due to 'save' after each insertion
    for brand_name in unique_brand_names:
        unique_brands(brand_name=brand_name).save()

    # option 2 -> using comprehension create all instances of the 'brand' column and save in bulk
    # unique_brands_to_create = [unique_brands(brand_name=brand_name) for brand_name in unique_brand_names]
    # unique_brands.objects.bulk_create(unique_brands_to_create)


def reverse_create_unique_brands(apps, schema_editor):
    unique_brands = apps.get_model("main_app", "UniqueBrands")
    unique_brands.objects.all().delete()  # truncates the table


class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0002_uniquebrands'),
    ]

    operations = [
        migrations.RunPython(create_unique_brands, reverse_code=reverse_create_unique_brands)
    ]
