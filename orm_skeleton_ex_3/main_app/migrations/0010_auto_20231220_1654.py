# Generated by Django 4.2.4 on 2023-12-20 16:54

from django.db import migrations


def find_age_group(age):
    if age <= 12:
        return 'Child'
    elif age <= 17:
        return 'Teen'
    else:
        return 'Adult'


def age_field_population(apps, schema_editor):
    """
    Create a new function that migrates information for the age group of every person based on their age.
    If the age is less than or equal to 12 - the group is "Child".
    If the age is between 13 and 17 - the group is "Teen".
    If the age is greater than or equal to 18 - the group is "Adult".
    """

    Person = apps.get_model('main_app', 'Person')
    all_persons = Person.objects.all()
    all_persons_ages = Person.objects.values_list('age', flat=True)
    persons_groups = [find_age_group(age) for age in all_persons_ages]

    for i in range(len(all_persons)):
        person = all_persons[i]
        person.age_group = persons_groups[i]
        person.save()

    print('Age group populated')


def reverse_age_field_populations(apps, schema_editor):
    Person = apps.get_model('main_app', 'Person')
    all_persons = Person.objects.all()

    for i in range(len(all_persons)):
        person = all_persons[i]
        person.age_group = 'No age group'
        person.save()

    print('Age group reversed to default value')


class Migration(migrations.Migration):
    dependencies = [
        ('main_app', '0009_person'),
    ]

    operations = [
        migrations.RunPython(age_field_population, reverse_code=reverse_age_field_populations)
    ]
